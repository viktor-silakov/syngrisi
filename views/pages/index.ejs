<!doctype html>
<html lang="en" xmlns:width="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <!--    <link rel="icon" href="../../static/imgs/logo.png">-->
    <link rel="icon" href="../../static/imgs/simpleLogoLightShadow.png">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"
          integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp"
          crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"
          integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB"
          crossorigin="anonymous">
    <link rel="stylesheet" href="static/css/colors.css">
    <style>
        .tooltip-inner {
            max-width: 300px;
            /* If max-width does not work, try using width instead */
            width: 300px;
            text-align: left;
        }

        .overlay-container {
            position: absolute;
            top: 50%;
            border: 0px none transparent;
            left: 50%;
            /*font-size: 50px;*/
            color: white;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
        }

        .overlay {
            position: fixed;
            display: none;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 2;
            cursor: pointer;
        }

        fix    </style>
    <% if(currentSuite) { %>
        <title>VRS list of checks - <%= currentSuite.name %> </title>
    <% }else{ %>
        <title>VRS list of checks - all suites</title>
    <% } %>

</head>
<body>

<div class="main container-fluid pl-3 pr-3 ml-0 mh-100">

    <div class="row bg-sidebar" name="logo-and-link">
        <div class="col-3 col-lg-3 w-25 pl-0 bg-sidebar text-light">
            <diw class="row pl-1">
                <div class="col-auto pl-4 pr-0 pt-3">
                    <div class="border-top border-bottom border-left rounded-left border-right rounded-right pl-1 pr-1 pt-1 pb-1">
                        <a class="unlink" href="/">
                            <img src="static/imgs/simpleLogoLightShadow3.png" alt="robo logo bg-light1" class=""
                                 style="width: 35px ">
                        </a>
                    </div>
                </div>
                <div class="col pl-2 pt-2 mr-0 text-truncate">
                    <!--                    <a class="unlink" href="/">Visual Regression Service</a>-->
                    <a class="unlink h1" href="/" title="Σύγκριση">Syngrisi</a>
                </div>
                <!--                <div class="col pl-2 pt-1 mr-0 border-top border-bottom border-right rounded-right text-truncate">-->
                <!--                    <a class="unlink" href="/">Visual Regression Service</a>-->
                <!--                </div>-->
            </diw>
        </div>
        <!--    TESTS TOOLBAR-->
        <div class="suite-head col-4 col-lg-6 text-light1 bg-sidebar pl-5 pt-3 h4 border-left mb-0 light-purple">
            <% if(currentSuite) { %>
                <span><%= currentSuite.name %></span>
            <% }else{ %>
                <span>All checks</span>
            <% } %>
        </div>
    </div>

    <!--    TABLE HEADER START    -->
    <div class="all-header row light-purple">
        <div class="col-3 col-lg-3 .col-xl-3 w-25 pl-0 bg-sidebar text-left float-right pr-1 pt-2 white">
            <div class="container">
                <a name="more-suites"
                   type="button"
                   data-toggle="collapse"
                   href="#collapseSuiteMenu"
                   aria-expanded="false"
                   aria-controls="collapseSuiteMenu"
                   class="btn btn-secondary border-0 bg-sidebar float-right unlink white" title="more">

                    <i class="fas fa-ellipsis-v fa-1x float-right "></i>
                </a>
            </div>

        </div>
        <div class="col w-75  ml-0 bg-sidebar border-light border-top1 border-left rounded-left1">
            <div class="row ">


                <div class="tests-toolbar col text-light p-1 bg-sidebar ">
                    <div class="row d-flex flex-row-reverse pr-2">
                        <div class="col-auto pl-1">
                            <a name="more-tests" type="button" class="btn btn-secondary bg-sidebar border-0"
                               title="more">
                                <i class="fas fa-ellipsis-v fa-lg"></i>
                            </a>
                        </div>
                        <div class="col-auto pl-1 pr-1">
                            <a name="remove-tests" type="button" class="btn btn-secondary bg-sidebar border-0"
                               onclick="removeTests()"
                               title="remove checked tests">
                                <i class="fas fa-trash fa-lg"></i>
                            </a>
                        </div>
                        <div class="col-auto pl-1 pr-1">
                            <a name="accept-checks" type="button" class="btn btn-secondary bg-sidebar border-0"
                               onclick="acceptSelectedChecks()"
                               title="accept selected checks">
                                <i class="far fa-check-circle fa-lg"></i>
                            </a>
                        </div>
                        <div class="col-auto pl-1 pr-1">
                            <a name="reload-tests" type="button" class="btn btn-secondary bg-sidebar border-0"
                               onclick="location.reload()"
                               title="reload page">
                                <i class="fas fa-sync-alt fa-lg"></i>
                            </a>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
    <!--    TABLE HEADER END    -->
    <div class="all-table row mh-100">
        <div class="sidebar col-3 col-lg-3  mh-100 bg-light  border-top border-right border-bottom border-silver float-left w-251 ml-0 mr-0"
        <div class="sidebar col-3 col-lg-3  mh-100 bg-light border-top  border-right border-bottom border-silver float-left w-251 ml-0 mr-0"
             style="width: 100px">
            <div class="suites-menu row pl-1 pt-1 bg-sidebar collapse light-purple" id="collapseSuiteMenu">
                <div class="col-12 p-0">
                    <div class="row border1 mr-1 ml-1">
                        <div class="col-auto ml-1">
                            <a name="check-all" type="button" class="btn btn-secondary bg-sidebar border-0 m-1"
                               onclick="location.reload()"
                               title="check all">
                                <i class="far fa-check-square fa-lg float-right"></i>
                            </a>
                        </div>
                        <div class="col-auto mr-1">
                            <a name="reload-suites" type="button" class="btn btn-secondary bg-sidebar border-0 m-1"
                               onclick="location.reload()"
                               title="reload">
                                <i class="fas fa-sync-alt fa-lg float-right"></i>
                            </a>
                        </div>
                        <div class="col-auto mr-1">
                            <a name="accept-last-as-baseline" type="button"
                               class="btn btn-secondary bg-sidebar border-0 m-1"
                               onclick="location.reload()" title="accept last as baseline">
                                <i class="far fa-check-circle fa-lg float-right green"></i>
                            </a>
                        </div>
                        <div class="col-auto mr-1 p-0">
                            <a name="delete-suites" type="button" class="btn btn-secondary bg-sidebar border-0 m-1"
                               title="delete suites and associated items"
                               onclick="removeCheckedSuites()"
                            >
                                <i class="fas fa-trash fa-lg float-right red"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <!--            SUITES LIST-->
            <div class="suites-list row pl-2 p-1 bg-light text-secondary ">

                <% suites.forEach(function(suite){ %>
                    <div class="row pl-3 w-100 border-bottom1 border-silver mt-1">
                        <div class="col.auto pl-2">
                            <input name="suite-item" class="small" type="checkbox" suiteid="<%= suite.id %>"
                                   id="suite-checkbox-<%= suite.id %>">
                        </div>
                        <div class="col pl-2 pb-1">
                            <a href="/?suitename=<%= suite.name %>" class="small text-dark"><%= suite.name %></a>
                        </div>
                    </div>
                <% }); %>
            </div>
            <!--            SUITES LIST END-->
        </div>
        <div class="table-rows content col float-right ">
            <div class="row bg-sidebar light-purple border-purple border-top">
                <div class="col-1 col-lg-auto text-truncate small ml-0 mt-1">
                    <input name="checkAll" onclick="checkAllTests()" type="checkbox" title="check all tests">
                </div>
                <div class="col-2 col-lg-1 text-truncate small">Status</div>
                <div class="col-4 col-lg-4 text-truncate small">Name</div>
                <div class="col-1 col-lg-2 text-truncate small">Start date</div>
                <div class="col-1 col-lg-1 text-truncate small">Browser</div>
                <div class="col-1 col-lg-1 text-truncate small">Platform</div>
                <div class="col-2 col-lg-2 text-truncate small">Viewport</div>
                <!--                <div class="col-1 small border-left border-right1">Id</div>-->
            </div>

            <div class="checks row">
                <% tests.forEach(function(test){ %>
                    <!--TEST_INFO START-->
                    <% if(Object.keys(checksByTestGroupedByIdent[test.id]).length > 0) { %>
                        <div class="testinfo row clearfix border-bottom_ border-secondary bg-light text-secondary1 m-0 w-100">
                            <div class="cell-input cell col-1 col-lg-auto border-bottom border-right text-truncate small d-flex align-items-center ">
                                <input id="<%= test.id %>"
                                       name="test"
                                       type="checkbox">
                            </div>
                            <div class="cell-status cell col-2 col-lg-1 border-bottom border-right text-truncate">
                                <% const statusesClasses = {
                                    Failed: 'text-danger',
                                    Passed: 'text-success',
                                    Unresolved: 'text-warning',
                                    Running: 'text-info',
                                    New: 'text-success font-weight-bold'
                                } %>

                                <span name="cell-status" id="<%= test.id %>_cell-status"
                                      class="<%= statusesClasses[test.status] %> small bg-gu"
                                      data-toggle="tooltip"
                                      data-placement="top"
                                      title="<%= test.status %>"><%= test.status %></span>
                                <span data-toggle="tooltip" data-original-title="<%= test.blinking %>">
                                    <% if(test.blinking > 0) { %>
                                        <img src="./static/blinking.png" class="img-fluid blink-icon" alt="blink">
                                    <% } %>
                                    <!--                                        <%= test.blinking %>-->
                                    </span>
                            </div>
                            <div class="cell-name cell col-4 col-lg-4 border-bottom border-right text-truncate">
                                <a data-toggle="collapse" class="collapsing" href="#testchecks_<%= test.id %>"
                                   onclick="drawTestChecksPreviews('<%= test.id %>');">
                                <span name="cell-name" id="<%= test.id %>_cell-name" class="text-secondary small "
                                      data-toggle="tooltip"
                                      data-placement="top"
                                      title="<%= test.name %>"><%= test.name %></span>
                                </a>
                            </div>
                            <div class="cell-date cell col-1 col-lg-2 border-bottom border-right text-truncate">
                                <span name="cell-date" id="<%= test.id %>_cell-date" class="text-primary small"
                                      data-toggle="tooltip"
                                      data-placement="top"
                                      title="<%= test.formattedCreatedDate %>"><%= test.formattedCreatedDate %></span>
                            </div>
                            <div class="cell-browser cell col-1 col-lg-1 border-bottom border-right text-truncate">
                                <span name="cell-browser" id="<%= test.id %>_cell-browser" class="text-primary small"
                                      data-toggle="tooltip"
                                      data-placement="top"
                                      title="<%= test.browserName %>"><%= test.browserName %></span>
                            </div>
                            <div class="cell-platform cell col-1 col-lg-1 border-bottom border-right text-truncate">
                                <span name="cell-os" id="<%= test.id %>_cell-os" class="text-primary small"
                                      data-toggle="tooltip"
                                      data-placement="top"
                                      title="<%= test.os %>"><%= test.os %></span>
                            </div>
                            <div class="cell-viewport cell col-2 col-lg-2 border-bottom  text-truncate">
                                <span name="cell-viewport" id="<%= test.id %>_cell-viewport" class="text-primary small"
                                      data-toggle="tooltip"
                                      data-placement="top"
                                      title="<%= test.viewport %>"><%= test.viewport %></span>
                            </div>
                            <!--                            <div class="col-1 border text-truncate">-->
                            <!--                                <span class="text-primary small" data-toggle="tooltip"-->
                            <!--                                      data-placement="top"-->
                            <!--                                      title="<%= test.id %>"><%= test.id %></span>-->
                            <!--                            </div>-->
                        </div>
                        <!--TEST_INFO END-->

                        <!-- CHECKS START -->
                        <div name="checks-previews" class="all-checks row w-100 m-0 collapsing "
                             id="testchecks_<%= test.id %>">

                            <!--  foreach checks start-->
                            <% Object.keys(checksByTestGroupedByIdent[test.id]).forEach(function(groupName, ind){ %>
                                <% const group = checksByTestGroupedByIdent[test.id][groupName]['checks'] %>
                                <% const check = group[0] %>
                                <% let groupStatus = 'not set' %>
                                <% if (group.map(g => g.status.toString()).includes('failed')) {
                                    groupStatus = 'failed'
                                } %>
                                <% if (group.map(g => g.status.toString()).includes('failed') && group[group.length - 1].status[0] === 'passed') {
                                    groupStatus = 'blinking'
                                } %>
                                <% if (!group.map(g => g.status.toString()).includes('failed')) {
                                    groupStatus = 'passed'
                                } %>
                                <% if (check.status == 'new') {
                                    groupStatus = 'new'
                                } %>
                                <div class="check col-4 border_ text-secondary mb-3 bg-light  pl-1"
                                     id="check_<%= check.id %>" diffId="<%= check.diffId %>"
                                     baselineId="<%= check.baselineId %>"
                                     checkStatus="<%= groupStatus %>">
                                    <% const statusesClasses = {
                                        passed: 'bg-success',
                                        new: 'bg-info',
                                        failed: 'bg-danger',
                                        blinking: 'bg-warning'
                                    } %>
                                    <div class="status-border image-wrapper column <%= statusesClasses[groupStatus] %> w-100 p-2 m-1">

                                        <div class="check-image column baseline m-1"
                                             data-toggle="tooltip"
                                             data-html="true"
                                             data-placement="right"
                                             title="Status: [<%= groupStatus %>]</br>
                                             Name: <%= check.name %> </br>
                                             Created: <%= check.formattedCreatedDate %> </br>
                                             Browser: <%= check.browserName %> </br>
                                             Viewport: <%= check.viewport %> </br>
                                             Platform: <%= check.os %> </br>
                                             Id: <%= check.id %> </br>
                                             ActualId: <%= check.actualSnapshotId %></br>
                                             BaselineId: <%= check.baselineId %></br>">

                                            <% if (groupStatus == 'new' || groupStatus == 'passed' || groupStatus === 'blinking') { %>
                                                <a href="/checksgroupview?id=<%= check.id %>" name="<%= check.name %>"
                                                   id="grouplink_<%= check.id %>">
                                                    <canvas class="snapshoot-canvas w-100"
                                                            id="canvas_snapshoot_<%= check.id %>"
                                                    ></canvas>
                                                </a>
                                            <% } else { %>
                                                <a href="/checksgroupview?id=<%= check.id %>">
                                                    <canvas class="snapshoot-canvas w-100"
                                                            id="canvas_snapshoot_<%= check.id %>"
                                                    ></canvas>
                                                </a>
                                            <% } %>
                                        </div>
                                        <!-- SNAPSHOT TOOOLBAR START-->
                                        <div class="container pl-0 pr-0">
                                            <div class="check-mini-toolbar d-flex row justify-content-around1 text-light pl-1 m-0">
                                                <div class="col-1 pr-1 pl-1 pt-1">
                                                    <input name="check-input" id="<%= check.id %>"
                                                           actualId="<%= check.actualSnapshotId %>"
                                                           baselineId="<%= check.baselineId %>"
                                                           type="checkbox">
                                                </div>

                                                <% const checksCount = Object.keys(checksByTestGroupedByIdent[test.id]).length %>
                                                <% const groupChecksCount = (checksByTestGroupedByIdent[test.id][groupName].checks.length > 1) ? `(${checksByTestGroupedByIdent[test.id][groupName].checks.length})` : '' %>
                                                <div name="check-name"
                                                     class="col-8 flex-shrink-1111 ml-0 mr-0 pt-2 pb-0 float-right1 align-middle text-truncate  small p-0"
                                                     data-toggle="tooltip"
                                                     data-placement="top"
                                                     title="<%= check.name %>">
                                                    <%= (ind + 1) %>/<%= checksCount %>
                                                    <sup><%= groupChecksCount %></sup> <%= check.name %>
                                                </div>

                                                <div name="check-buttons"
                                                     class="col-3 pr-0 pl-0 pt-1 float-right flex-row-reverse1">
                                                    <!--                                                <div class="check-buttons  mt-1 mb-1 pb-1 pt-1 pl-1 pr-0">-->
                                                    <div class="container pl-0 pr-0">
                                                        <div class="row justify-content-end  flex-row-reverse mr-0 ml-1">
                                                            <div class="col-3 p-0 float-right1">
                                                                <a
                                                                        class="btn-check btn-sm ml-1 rounded-0 border-0"
                                                                        style="line-height: 0.1; padding: 2px;"
                                                                        id="checkbutton_<%= check.id %>"
                                                                        data-toggle="tooltip"
                                                                        data-placement="top"
                                                                        title="Remove this check"
                                                                        onclick="removeOneCheck('<%= check.id %>')">
                                                                    <i class="fas fa-times-circle fa-1x"></i>
                                                                </a>
                                                            </div>
                                                            <div class="col-3 ml-0 p-0 float-right1">
                                                                <% if(groupStatus == 'failed') { %>
                                                                    <a
                                                                            class="btn-check btn-sm ml-1  rounded-0 border-0"
                                                                            style="line-height: 0.1; padding: 2px;"
                                                                            id="acceptbutton_<%= check.id %>"
                                                                            data-toggle="tooltip"
                                                                            data-placement="top"
                                                                            onclick="acceptOneCheck('<%= check.id %>', '<%= check.actualSnapshotId %>', '<%= check.baselineId %>', '<%= test.id %>')"
                                                                            title="Accept the actual snapshoot as baseline"
                                                                    >

                                                                        <i class="fas fa-check fa-1x"></i>
                                                                    </a>
                                                                <% } %>
                                                            </div>
                                                            <div class="col-3 ml-2 p-0 float-right1">
                                                                <% if(groupStatus == 'failed') { %>
                                                                    <a
                                                                            class="btn-check btn-outline-success1 btn-sm  rounded-0 border-0"
                                                                            style="line-height: 0.1; padding: 2px;"
                                                                            id="comparebutton_<%= check.id %>"
                                                                            data-toggle="tooltip"
                                                                            data-placement="top"
                                                                            title="Compare snapshots"
                                                                            onclick="location.href='./diffview?diffid=<%= check.diffId %>&actualid=<%= check.actualSnapshotId %>&expectedid=<%= check.baselineId %>&checkid=<%= check.id %>';">
                                                                        <i class="fas fa-exchange-alt fa-1x"></i>
                                                                    </a>
                                                                <% } %>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- SNAPSHOT TOOOLBAR START-->
                                    </div>
                                </div>
                            <% }); %>

                            <!--  foreach checks end-->
                        </div>
                        <!-- all-checks-->
                    <% }; %>

                <% }); %>
                <!--tests.forEach -->
            </div> <!-- .checks -->
        </div> <!-- .content     -->
    </div> <!-- all row -->
</div>

<div id="notify" role="alert" aria-live="assertive" aria-atomic="true"
     class="fixed-bottom-right bg-light m-1 border rounded toast fade show"
     data-autohide="false"
     style="display: none"
>
    <div class="toast-header border-bottom">
        <svg class="bd-placeholder-img rounded mr-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg"
             preserveAspectRatio="xMidYMid slice" focusable="false" role="img">
            <rect id="notify-rect" width="100%" height="100%" fill="#2ECC40"></rect>
        </svg>
        <strong id="notify-header" class="mr-auto">Success</strong>
        <!--        <small>11 mins ago</small>-->
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close"
                onclick="$('#notify').hide()">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div id="notify-message" class="toast-body">
        Operation was successful finished
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"
        integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
        crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"
        integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T"
        crossorigin="anonymous"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/fabric.js/3.6.1/fabric.min.js"></script>
<script src="lib/baselineView.js"></script>
<script>
    var baselines = {}
    const urlParams = new URLSearchParams(window.location.search);
    const unfoldTestId = urlParams.get('unfoldTestId');
    if (unfoldTestId)
        unfoldCheck(unfoldTestId)

    function unfoldCheck(id) {
        jQuery(`#testchecks_${id}`)[0].scrollIntoView();
        jQuery(`#testchecks_${id}`).collapse('show');
        drawTestChecksPreviews(unfoldTestId);
    }

    function drawOverlay(expectedId, actualId, diff) {
        document.getElementById('overlay').style.display = 'block';
    }

    function drawTestChecksPreviews(testId) {
        var checksDivs = Array.prototype.slice.call(document.getElementById(`testchecks_${testId}`).children);
        let checksIds = []
        checksDivs.forEach(el => checksIds.push(el.id.replace('check_', '')))

        let baselineIds = []
        checksDivs.forEach(el => baselineIds.push(el.getAttribute('baselineId')))

        let diffsIds = []
        checksDivs.forEach(el => diffsIds.push(el.getAttribute('diffId')))

        let statuses = []
        checksDivs.forEach(el => statuses.push(el.getAttribute('checkStatus')))
        console.log(statuses)

        checksIds.forEach(function (id, index) {
            let baseline = {};
            fabric.Object.prototype.objectCaching = false;
            const snapshotId = ((statuses[index] === 'new') || (statuses[index] === 'passed') || (statuses[index] === 'blinking')) ? baselineIds[index] : diffsIds[index]
            // const snapshotId = diffsIds[index]
            fabric.Image.fromURL(`/snapshoots/${snapshotId}.png`, function (oImg) {
                baseline = new BaselineView('canvas_snapshoot_' + id,
                    oImg,
                    {
                        weight: document.getElementById('canvas_snapshoot_' + id).offsetWidth,
                        backimageId: baselineIds[index]
                    }
                );
                baseline.getSnapshotIgnoreRegionsDataAndDrawRegions(baselineIds[index]);
                baselines[id] = baseline;
            })
        })
    }

    $(function () {
        $('[data-toggle="tooltip"]')
            .tooltip({
                animation: true,
                delay: {
                    show: 0,
                    hide: 100
                }
            });
    });</script>
<script>
    function showNotification(msg, status = 'Success') {
        document.getElementById("notify-header").textContent = status;
        document.getElementById("notify-message").textContent = msg;
        document.getElementById("notify-rect").setAttribute('fill', '#2ECC40');
        if (status === 'Error')
            document.getElementById("notify-rect").setAttribute('fill', '#FF4136');
        $('#notify').show()
        setTimeout(function () {
                $('#notify').hide()
            },
            7000)
    }

    function removeOneCheck(id) {
        if (!confirmation()) return;
        removeCheck(id);
    }

    function removeCheck(id) {
        var xhr = new XMLHttpRequest();
        var params = `id=${id}`;
        xhr.open('DELETE', `/checks/${id}`, true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

        xhr.onload = function () {
            if (xhr.status === 200) {
                console.log('Success ' + id + '--' + xhr.responseText);
                let checkDiv = document.getElementById(`check_${id}`);
                checkDiv.parentNode.removeChild(checkDiv);
                showNotification('The check was removed')
            } else {
                showNotification('Remove request was failing', 'Error');
                console.log('Request failed.  Returned status of ' + xhr.status);
            }
        };
        xhr.send(params);
    }

    async function acceptOneCheck(id, newBaselineId, oldBaselineId, testId) {
        if (!confirmation()) return;
        const regionData = await baselines[id].getRegionsData(oldBaselineId);
        if (regionData.ignoreRegions && regionData.ignoreRegions != 'undefined') {
            const confirm = confirmation('The previous baseline contains regions. Doy you want to copy them?')
            if (confirm) {
                baselines[id].sendIgnoreRegions(newBaselineId, JSON.parse(regionData.ignoreRegions));
                console.log('ignore region data was sent to new baseline snapshoot' + JSON.parse(regionData.ignoreRegions));
            }
        }
        let unfoldLocation;
        const cleanUrl = document.URL.replace(/[&?]{0,1}unfoldTestId=[^$&]{24}/g, '');

        if (cleanUrl.includes('?')) {
            unfoldLocation = cleanUrl + '&unfoldTestId=' + testId;
        } else {
            unfoldLocation = cleanUrl + '?unfoldTestId=' + testId;
        }
        acceptCheck(id, newBaselineId, () => location.href = unfoldLocation);
    }

    async function acceptSelectedChecks() {
        if (!confirmation('Please pay attention to everything regions\' data will be copied to new baselines. Are you sure? Are you sure?')) return;
        let checkboxes = document.querySelectorAll('input[name=check-input]:checked');
        let results = [];
        for (const checkbox of checkboxes) {
            const checkId = checkbox.getAttribute('id');
            const baselineId = checkbox.getAttribute('baselineId');
            const actualId = checkbox.getAttribute('actualId');
            const regionData = await baselines[checkId].getRegionsData(baselineId);
            if (regionData.ignoreRegions && regionData.ignoreRegions != 'undefined') {
                baselines[checkId].sendIgnoreRegions(actualId, JSON.parse(regionData.ignoreRegions));
                console.log('ignore region data was sent to new baseline snapshoot' + JSON.parse(regionData.ignoreRegions));
            }

            results.push(acceptCheck(checkId, actualId));
        }
        Promise.all(results).then((result) => {
            location.reload();
        }).catch(e => {
            console.log(e);
        })
    }

    function acceptCheck(id, newBaselineId, callback) {
        return new Promise((resolve, reject) => {
            try {
                const xhr = new XMLHttpRequest();
                // send empty diffid
                const params = `id=${id}&baselineId=${newBaselineId}&diffId&status=passed`;
                console.log(params);
                xhr.open('PUT', `/checks/${id}`, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

                xhr.onload = function () {
                    if (xhr.status === 200) {
                        showNotification(`The check '${id}' was accepted`)

                        console.log('Success ' + id + '--' + xhr.responseText);
                        if (callback)
                            callback();
                        return resolve(xhr);
                    } else {
                        console.log('Request failed. Returned status of ' + xhr.status + 'resp:' + xhr.responseText);
                    }
                };
                xhr.send(params);
            } catch (e) {
                return reject(e);
            }
        })
    }

    function removeTest(id) {
        return new Promise(function (resolve, reject) {
            try {
                const xhr = new XMLHttpRequest();
                const params = `id=${id}`;
                xhr.open('DELETE', `/tests/${id}`, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

                xhr.onload = function () {
                    if (xhr.status === 200) {
                        console.log('Success ' + id + '--' + xhr.responseText);
                        return resolve(xhr);
                    } else {
                        console.log('Request failed.  Returned status of ' + xhr.status);
                        return reject(xhr);
                    }
                };
                xhr.send(params);
            } catch (e) {
                return reject(e);
            }
        })

    }

    function removeTests() {
        if (!confirmation()) return;
        let checkboxes = document.querySelectorAll('input[name=test]:checked');
        let results = []
        for (const checkbox of checkboxes) {
            results.push(removeTest(checkbox.id))
        }
        Promise.all(results).then(function (results) {
            location.reload();
        })
    }

    function removeSuite(id) {
        return new Promise(function (resolve, reject) {
            try {
                const xhr = new XMLHttpRequest();
                const params = `id=${id}`;
                xhr.open('DELETE', `/suites/${id}`, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

                xhr.onload = function () {
                    if (xhr.status === 200) {
                        console.log(`Suite was successfully removed, id: '${id}', resonse test: '${xhr.responseText}'`);
                        return resolve(xhr)
                    } else {
                        console.log('Cannot remove the suite. Request is failed.  Returned status of ' + xhr.status);
                        reject(xhr)
                    }
                };
                xhr.send(params);
            } catch (e) {
                return reject(e)
            }
        })
    }

    function removeCheckedSuites() {
        if (!confirmation()) return;
        let checkboxes = document.querySelectorAll('input[name=suite-item]:checked');
        let result = [];
        for (const checkbox of checkboxes) {
            result.push(removeSuite(checkbox.getAttribute('suiteid')));
        }
        Promise.all(result).then(() => location.reload())
    }

    function checkAllTests() {
        let checkboxes = document.querySelectorAll('input[name=test]');
        checkboxes.forEach(function (ch) {
            if (ch.checked === false) {
                ch.checked = true;
            } else {
                ch.checked = false;
            }
        });
    }

    function confirmation(text = 'are you sure?') {
        const answer = window.confirm(text);
        console.log(answer);
        return answer;
    }

</script>
</body>
</html>
