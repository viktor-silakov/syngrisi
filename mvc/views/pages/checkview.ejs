<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="icon" href="../../../static/icons/leaf_logo.svg">
    <link rel="stylesheet" href="./static/css/common.css">
    <link rel="stylesheet" href="./static/fa/css/all.min.css">
    <link rel="stylesheet" href="./static/css/colors.css">
    <link rel="stylesheet" href="../../../static/font/bootstrap-icons.css">
    <script src="./static/js/jquery-3.3.1.slim.js"></script>
    <script src="./static/js/popper.min.js"></script>
    <script src="./static/js/bootstrap.min.js"></script>
    <script src="./static/js/fabric.min.js"></script>
    <script src="./lib/mainView.js"></script>
    <script src="./lib/sideToSideView.js"></script>

    <script src="lib/gridHelpers.js"></script>
    <script src="lib/diffHelpers.js"></script>
    <script src="../../../static/js/ejs.js"></script>

    <title>Shapshoot - <%= baselineSnapshot.name; %> | <%= baselineSnapshot.id; %>
        | <%= baselineSnapshot.formattedcreatedDate; %></title>
</head>
<body style="overflow-x: auto; overflow-y: auto">
<div class="container-fluid pl-0 pr-0" style="background-color: #E5E5E5 !important;">


    <div name="page-head" class="row pb-0 bg-olive mr-0" style="margin-right: -16px; margin-left: -16px">
        <%- include('components/header_checkview') %>
    </div>


    <div class="row main-content pr-1 mr-3 ml-0">

        <div id="sidebar" name="sidebar" class="col-2 check-sidebar pl-2 ml-1 pt-3">
            <script>
                window.addEventListener('load', async () => {
                    // SIDEBAR
                    const pageTemplate = await getRequest('../../../static/ejs/check_sidebar.ejs');
                    let sidebarHtml = await ejs.render(pageTemplate,
                        {
                            check: <%- JSON.stringify(check) %>,
                            lastChecksWithSameName: <%- JSON.stringify(lastChecksWithSameName) %>,

                        },
                        { async: true },
                    );

                    document.getElementById('sidebar')
                        .innerHTML = sidebarHtml;
                });

            </script>
        </div>


        <div name="shapshoot" id='snapshoot'
             class="col-9 float-left w-100 border border-dark mb-3 pt-0 mr-0 ml-2 pl-0 pr-0 mt-3 mh-100 shadow"
             style="height: 3500px;">

            <div class="toolbar-wrapper sticky-top float-right pt-1 pr-4">
                <div class="diff-toolbar vcenter border border-secondary rounded mt-1 pr-0 row d-flex align-content-center bg-light"
                     style="font-size: 1.4em; line-height: 27px;"
                >
                    <%- include('components/checkview_toolbar') %>
                </div>
            </div>

            <canvas class="snapshoot-canvas pb-1" id="2d">
            </canvas>
        </div>
    </div>
</div>

<!--TOAST START-->
<div id="notify" role="alert" aria-live="assertive" aria-atomic="true"
     class="fixed-bottom-right bg-light m-1 border rounded toast fade show"
     data-autohide="false"
     style="display: none"
>
    <div class="toast-header border-bottom">
        <svg class="bd-placeholder-img rounded mr-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg"
             preserveAspectRatio="xMidYMid slice" focusable="false" role="img">
            <rect id="notify-rect" width="100%" height="100%" fill="#2ECC40"></rect>
        </svg>
        <strong id="notify-header" class="mr-auto">Success</strong>
        <!--        <small>11 mins ago</small>-->
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close"
                onclick="$('#notify').hide()">
            <span aria-hidden="true">Ã—</span>
        </button>
    </div>
    <div id="notify-message" class="toast-body">
        Operation was successful finished
    </div>
</div>
<!--TOAST END-->
<% const actual = actualSnapshot ? JSON.stringify(actualSnapshot) : null %>
<script>
    function toggleButtonAsPressed(id) {
        const button = document.getElementById(id);
        if (button.classList.contains('pressed-toolbar-button')) {
            return button.classList.remove('pressed-toolbar-button');
        }
        button.classList.add('pressed-toolbar-button');
    }

    // PAN
    let mouseDown = false;

    const defaultMode = '';
    var currentMode = {
        mode: '',
        set: function (value) {
            this.mode = value;
        },
        toggle: function (mode) {
            if (this.mode === mode) {
                return this.set(defaultMode);
            }
            this.set(mode);
        },
        isPan: function () {
            return this.mode === 'pan';
        }
    };

    function setPanEvents(canvas) {
        canvas.on('mouse:move', (e) => {
                if (mouseDown && currentMode.isPan()) {
                    canvas.setCursor('grab');

                    // console.log({ e })
                    const mEvent = e.e;
                    // console.log({ e })
                    const delta = new fabric.Point(mEvent.movementX, mEvent.movementY);
                    canvas.relativePan(delta);
                    canvas.renderAll();
                }
            }
        );
        canvas.on('mouse:down', (e) => {
                mouseDown = true;

                if (currentMode.isPan()) {
                    canvas.setCursor('grab');

                    canvas.renderAll();
                }
            }
        );
        canvas.on('mouse:up', (e) => {
                mouseDown = false;
                // if (currentMode.isPan()) {
                //     console.log(currentMode.isPan());
                canvas.setCursor('default');
                canvas.renderAll();
                // }
            }
        );
    }

    function toggleSnapshotToolbarCollapse() {
        const wrapper = document.getElementsByClassName('toolbar-wrapper')[0];
        const buttonsEl = document.getElementById('snapshot-toolbar-buttons');
        const collapseIcon = document.getElementById('snapshot-collapse-icon');
        if (buttonsEl.style.display === 'none') {
            wrapper.style.marginRight = '0';
            buttonsEl.style.display = 'inline-block';
            collapseIcon.classList.remove('bi-chevron-compact-left');
            collapseIcon.classList.add('bi-chevron-compact-right');
            return;
        }
        collapseIcon.classList.remove('bi-chevron-compact-right');
        collapseIcon.classList.add('bi-chevron-compact-left');

        wrapper.style.marginRight = '-41px';
        buttonsEl.style.display = 'none';
    }

    // KEY BINDING
    document.addEventListener('keydown', function (event) {
        console.log(event.code);
        if (event.code === 'KeyA') {
            mainView.addIgnoreRegion({
                name: 'ignore_rect',
                strokeWidth: 0,
            });
        }
        if (event.code === 'Minus') {
            mainView.zoom(0.8);
        }

        if (event.code === 'Equal') {
            mainView.zoom(1.2);
        }

        if ((event.code === 'Delete') || (event.code === 'Backspace')) {
            mainView.removeActiveIgnoreRegion();
        }

        if ((event.code === 'KeyG')) {
            currentMode.toggle('pan');
            toggleButtonAsPressed('grab-wrapper');
        }

        if ((event.code === 'KeyD')) {
            mainView.toggleDiff({
                filename: '<%= diffSnapshot?.filename %>',
                id: '<%= diffSnapshot?.id %>',
                name: '<%= diffSnapshot?.name %>',
                createdDate: '<%= diffSnapshot?.formattedCreatedDate %>'
            });
        }

        if ((event.code === 'KeyS')) {
            mainView.sendIgnoreRegions('<%= baselineSnapshot.id %>', mainView.getRectData());
        }
    });

    $(document)
        .on('click', '.deleteBtn', function () {
            if (mainView.canvas.getActiveObject()) {
                mainView.canvas.remove(mainView.canvas.getActiveObject());
                $('.deleteBtn')
                    .remove();
            }
        });

    var mainView = {};

    let baselineImg = new Image();
    baselineImg.src = '/snapshoots/<%= baselineSnapshot.filename || baselineSnapshot.id + '.png'; %>';
    baselineImg.onload = async function () {
        // calculate the canvas DOM element height to resize it according the image proportion
        // the canvas width doesn't not update
        let coef = document.getElementById('snapshoot').clientWidth / this.width;
        // console.log({ canvasElementClientWidth: document.getElementById('snapshoot').clientWidth });
        let calculatedHeight = this.height * coef;
        // console.log({ canvasElementClientHeight: document.getElementById('snapshoot').clientHeight });
        document.getElementById('snapshoot').style.height = calculatedHeight + 'px';
        // console.log({ canvasElementClientHeight: document.getElementById('snapshoot').clientHeight });

        fabric.Object.prototype.objectCaching = false;

        mainView = new MainView(
            {
                canvasId: '2d',
                canvasElementWidth: document.getElementById('snapshoot').clientWidth,
                canvasElementHeight: document.getElementById('snapshoot').clientHeight,
                url: baselineImg.src,
                diffId: '<%= diffSnapshot?.id; %>',
                <% if(actual) { %>
                actual: <%- actual %>,
                <% } %>
            }
        );
        mainView.getSnapshotIgnoreRegionsDataAndDrawRegions('<%= baselineSnapshot.id; %>');
        setPanEvents(mainView.canvas);

    };
</script>
<script src="../../../static/js/bootstrap-toolkit.js"></script>
<script src="../lib/commonEvents.js"></script>
</body>
</html>
